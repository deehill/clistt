/tmp/ghubRepoTest/Website_ChecklistFolder/WebsiteChecklistOverview.doc \

	once the website/app has gotten to a point where key 
	 UX/UI/logic/database functions are "working", it might be ok to 
	 start "checking" the overall Website, and using the/a 
	 WebsiteChecklist to check off what "works/doesn't work"

	The idea of the WebsiteChecklist is to test/check off items 
	 similar to the items in the: 
		ProductionCheckList/ReleaseCheckList/TestCheckList items
	Key differences are that the items being tested/checked at this 
	 stage aren't expected to "work" correctly all the time..
	 -broken items are/might be expected as this is kind of 
		iterative, 
	 -also focuses more on the actual code being developed, as opposed 
		to the overall system+code..
	-might be useful to also have auto testing for the checklist items
	-checking/rechecking allows consistent progress to be handled/tracked
	-gives feedback on issues as well
	-checklist/strategy to be able to keep the process on track for 
	 the app in check.
	the overall checklist is based on what the project/webapp/dev/funcs need 
	 to implement/check off
	what the steps are:
	 during the dev/create/database app process,
	 for the initial setup process
	 for the dev steps
	 for database:
		define schema/layout
		define redundancy process/steps
		define sql/init data process
		define config/setup files
		inteface with external cron/security issues
		define/test db funcs to use in the app
		etc
		all of the above happens in the app folder/process

		in this checklist, 
			define the items to be checked -- for consistency..
			check items..
			
	 for the dev/testing func/unit testing/etc..
	 for... etc..
	 define what the "steps" are to be used during the 
		database/dev process
 	 define the internal/database/dev testing -- to add to checklist
	 ability to comment/reply
	 ability to add/mod repos for version control/branch policy

	the steps are used to have consistency, to make sure critical items 
	 aren't missed/skipped during the setup/dev/release/prod/post morteum
	 phases

	the idea is to map the checklists for the differnt parts of the 
	app create process, to the overall schedule.
 
	the overall DatabaseChecklist might work with a projmgmt app as well
	-the DatabaseChecklist works with the other "checklist" apps

	team members are able to comment/doc/respond to comments during 
	 dev process/cycle


	description/comments/docs for any subfolders/files to 
	 give user understanding of how/why flow/logic of overall project


